syntax = "proto3";

package api.users.v1;

option go_package = "seckill/api/users/v1;v1";
option java_multiple_files = true;
option java_package = "api.users.v1";

service Users {
	rpc CreateUsers (CreateUsersRequest) returns (CreateUsersReply);
	rpc UpdateUsers (UpdateUsersRequest) returns (UpdateUsersReply);
	rpc DeleteUsers (DeleteUsersRequest) returns (DeleteUsersReply);
	rpc GetUsers (GetUsersRequest) returns (GetUsersReply);
	rpc ListUsers (ListUsersRequest) returns (ListUsersReply);
}

message CommonReply{
	//用于对操作不需要返回消息的消息统一回复
	int64 code = 1;
	string msg = 2;
}
message UsersRequest{
	//传递注册用户，区别就是不需要id,其次部分东西是系统生成的，如逾期记录等
	string username = 1;
	string password = 2;
	string id_card = 3;
	string phone = 4;
	int64 sex = 5;//性别，0男1女
	int64 age = 6;
	string true_name = 7;
	int64 carrer = 8;//职业类别,这个等会规定,通过枚举列举
}
message UsersReply{
	//返回通用用户消息,主要是给用户本人和管理员看，设置权限访问
	int64 id = 1;
	string username = 2;
	string id_card = 3;
	string phone = 4;
	int64 sex = 5;//性别，0男1女
	int64 age = 6;
	string true_name = 7;
	int64 carrer = 8;//职业类别,这个等会规定,通过枚举列举
	//下面是系统生成的
	int64 score = 9;//信誉分，默认100
	int64 count = 10;//逾期次数，默认0

}
message CreateUsersRequest{
	UsersRequest UsersRequest = 1;
}
message CreateUsersReply{
	CommonReply reply = 1;
}

message UpdateUsersRequest{
	string password = 1;
	string phone = 2;
	int64 carrer = 3;
	//只有这3个参数可以改
}
message UpdateUsersReply {
	CommonReply reply = 1;
}

message DeleteUsersRequest {
	//由管理员向这个接口发送请求
	int64 id = 1;
}
message DeleteUsersReply {
	CommonReply reply = 1;
}

message GetUsersRequest {
	//这个也要鉴权，注意权限控制
	int64 id = 1;
}
message GetUsersReply {
	UsersReply userReply = 1;
}

message ListUsersRequest {
	//不需要任何请求消息
}
message ListUsersReply {
	repeated UsersReply usersReply = 1;
}